
services:
  postgres:
    image: postgres:15
    container_name: pg-player
    environment:
      POSTGRES_USER: sergio
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: sportsdb
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - pipeline_net

  airflow:
    image: apache/airflow:2.8.0
    container_name: airflow
    user: root
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://sergio:mypassword@pg-player:5432/airflow_metadata
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      _AIRFLOW_DB_MIGRATE: "true"
      _AIRFLOW_WWW_USER_CREATE: "true"
      _AIRFLOW_WWW_USER_USERNAME: admin
      _AIRFLOW_WWW_USER_PASSWORD: admin
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    command: bash -c "airflow scheduler & exec airflow webserver"
    networks:
      - pipeline_net

  spark_master:
    image: bitnami/spark:3.3.2
    container_name: spark-master
    depends_on:
      - kafka
      - postgres
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8081:8080"
    volumes:
      - ./spark:/app
      - ./jdbc:/app/jdbc
    command: >
      bash -c "
        /opt/bitnami/scripts/spark/entrypoint.sh /opt/bitnami/scripts/spark/run.sh &
        sleep 30 &&
        cd /app &&
        spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.2 --driver-class-path /app/postgresql-42.7.3.jar --jars /app/postgresql-42.7.3.jar prop_bet_streaming_job.py > /tmp/spark_streaming.log 2>&1 &
        wait
      "
    networks:
      - pipeline_net

  spark_worker:
    image: bitnami/spark:3.3.2
    container_name: spark-worker
    depends_on:
      - spark_master
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    networks:
      - pipeline_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pipeline_net

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - pipeline_net

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.4.0
    container_name: kafka-rest
    depends_on:
      - kafka
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
    networks:
      - pipeline_net

  webapp:
    build: ./webapp
    container_name: prop-bet-webapp
    depends_on:
      - postgres
    ports:
      - "5001:5001"
    environment:
      DB_HOST: pg-player
      DB_PORT: 5432
      DB_NAME: sportsdb
      DB_USER: sergio
      DB_PASSWORD: mypassword
    networks:
      - pipeline_net

networks:
  pipeline_net:

volumes:
  postgres_data:
